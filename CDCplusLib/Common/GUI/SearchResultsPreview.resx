<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdShowResults.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>